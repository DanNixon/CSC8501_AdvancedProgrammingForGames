#include "CppUnitTest.h"

#include <string>

#include "Coursework2Lib/Decoder.h"
#include "CircuitSimulatorLib/BitStream.h"
#include "UtilityLib/BinaryFileIO.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;
using namespace CircuitSimulator;
using namespace Utility;

namespace Coursework2
{
namespace Test
{
TEST_CLASS(DecoderTest)
{
public:
  TEST_METHOD(Decoder_Simple)
  {
    // Data
    const std::string originalStr("0000110101101010110011010100101001000101110101010101010101000101010010101101010100101001010101101010110101010100101010101001000000000000111101001010101011110010010101011000011101010010101010101001010010100101010110101011011111101001010101010100101010101010010101001010010101001100001010101010101001010100101010010101010101010101010111110101010011101110111010101110110101001001010010101101010010101010101001010101010101001010101000101010010101010101001010101010010101001010101010100101010101010100100101000000101000000010010000000100000010101000001001111010001100010101010101010101001010101001101010101010010101010100101010101010010101010010101010100101010101010011111010101101010101110101101011101010110100101010101010010010100010101010101010100101010101010101001001010110101010101001010101010100101010100101010101001010100101010101001010101001010101010101001010010101001010101010101010011001010100100101010010101010010101010100101010101001010101001010101010010100101001010101101010110111111010010101010101001010101010100101010010100101010011000010101010101010010101001010100110100101010101010011010010101010101010101111101010100111011101110101011101101010010010100101011010100101010101010010101010101010010101010001010100101010101010010101010100101010010101010101001010101110101010100101010101001001010100110101010110101010010010100010101010010101010010101010101010111110101010010101010100101000000010010000000100000010101000001001111010001100010101010101010101001010101001101010101010010101010100101010101010010101010010101010100101010101010011111010101101010101110101101011101010110101010011101110111010101110110101001001010010101101010010101010101001010101010101001010101000101010010101010101001010101010010101001010101010100101010111010101010010101010100100101010011010101011010101001001010001010101001010101001010101010101011111010101001010101010010100000001001000000010000001010100000100111101000110001010101010101010100101010100110101010101001010101010010101010101001010101001010101010010101010101001111101010110101010111010110101110101011010");
    const std::string encodedStr

    // Get encoded data BitStreams
    std::stringstream encodedStrStream(encodedStr);
    BitStream encodedInput;
    BinaryFileIO::Read(encodedInput, encodedStrStream);

    // Do decoding
    BitStream output;
    Decoder d;
    d.decode(encodedInput, output);
    
    // Get expected original data BitStream
    std::stringstream originalStrStream(originalStr);
    BitStream expectedOutput;
    BinaryFileIO::Read(expectedOutput, originalStrStream);

    // Test size
    Assert::AreEqual(expectedOutput.size(), output.size());

    // Test data
    for (size_t i = 0; i < expectedOutput.size(); i++)
    {
      std::wstring m = L"idx " + std::to_wstring(i++);
      Assert::AreEqual((bool)expectedOutput[i], (bool)output[i], m.c_str());
    }
  }
};
}
}